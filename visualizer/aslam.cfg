skybox: "teagle"
objects: (

  // Red  <=> Actual Position
  // Green <=> Predicted Position

  {
    model = "buoy.obj"
    texture = "buoy_red_flipped.png"
    render_tag = "a_buoy_real"
  },

  {
    model = "buoy.obj"
    texture = "buoy_green_flipped.png"
    position = "aslam_buoy_a_out"
  },

  {
    model = "buoy.obj"
    texture = "buoy_red_flipped.png"
    render_tag = "b_buoy_real"
  },

  {
    model = "buoy.obj"
    texture = "buoy_green_flipped.png"
    position = "aslam_buoy_b_out"
  },

  {
    model = "buoy.obj"
    texture = "buoy_red_flipped.png"
    render_tag = "c_buoy_real"
  },

  {
    model = "buoy.obj"
    texture = "buoy_green_flipped.png"
    position = "aslam_buoy_c_out"
  },

  {
    model = "buoy.obj"
    texture = "buoy_red_flipped.png"
    render_tag = "d_buoy_real"
  },

  {
    model = "buoy.obj"
    texture = "buoy_green_flipped.png"
    position = "aslam_buoy_d_out"
  },

  {
    model = "buoy.obj"
    texture = "buoy_green_flipped.png"
    position = "aslam_sub"
  },

  {
    type = "axes"
    orientation_q = "kalman"
    exclude_renders = ( "offscreen", "shadow" )
  },

  {
    model = "thor.obj"
    position = "kalman"
    orientation_q = "kalman"
    camera_attachments = (
                           { name = "forward"
                             pos = ( 0.5, 0, 0 )
                             orientation = (0, 0, 0)
                             width = 512 height = 512 },
                           { name = "downward"
                             pos = ( 0, 0, 0.3 )
                             orientation = (0, -90, 0)
                             width = 512 height = 512 fov = 86 }
                         )
    sub = true
    exclude_renders = ( "offscreen" )
  },

  // Objects with transparency are last to avoid alpha blending issues.
  // https://www.opengl.org/wiki/Transparency_Sorting
  {
    model = "teagle.obj"
    exclude_renders = ( "shadow" )
  },

  {
    model = "thor.obj"
    position = "kalman"
    orientation_hpr = "desires"
    alpha = 0.43
    exclude_renders = ( "offscreen", "shadow" )
  }
)
