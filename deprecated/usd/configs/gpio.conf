; AVR Register Map. Format: 
; ; denotes a comment, # denotes a section header, $ is the number of total registers, @ is the Device information
; Types are: bool==uint8 (one reg),  uint16 (one reg), uint32 (two regs), int8 (one reg),  int16 (one reg), int32 (two regs), float (two regs)
; arrays of 2 reg values must be an even length

;$ is the number of total registers. It is required, but not used by the AVR defgen
$64

;@Device information: name, id, path to device, baud rate
@ gpio, 43, autodetect, 57600

;group: depth,N,desc
;group: pressure,N,desc

; Required/Reserved stuff
# 0,0,N,default registers
1, uint16, deviceId, N, Y, Contains the device ID
1, uint16, protocolRev, N, Y, Contains the supported protocol revision number, 0xMMmm, for Major/minor numbers
2, uint32, buildDate, N, Y, 32-bit build date: 0xYYYYMMDD.
1, uint16, hb0, N, N, Write to trigger a HB action
1, uint16, hb1, N, Y, Read to verify HB action (hb0 is copied here on write).
1, uint16, restartState, N, N, Restart status: 0 = fresh, -1 = watchdog. Will be set to -1 when a reset chip command is received.

; Custom registers
# 30,10000,Y,Write only registers
;30
2, float, depth/offset, N, Y, contains the offset value of the depth of the vehicle taken at the surface - can be manually set
;32
2, float, depth/depth, N, Y, contains the depth of the vehicle
;34
2, float, pressure/internal, N, Y, contains the internal pressure of the hull
