skybox: "teagle"
fishbowl_data: true
objects: (
  {
    model = "Path.obj"
    position = [ 0.0,-1.0, 3.5 ]
    orientation_hpr = [ 235, 0, 90 ]
    render_tag = "pipe_to_buoys"
  },

  {
    model = "Path.obj"
    position = [9.0, -2.5, 3.5 ]
    orientation_hpr = [ 90, 0, 90 ]
    render_tag = "pipe_to_wire"
  },

  // {
  //   points = "aslam"
  //   addr = "127.0.0.1"
  // },

  // Buoys
  { line = "shm" group = "red_buoy_obs_left" color = [ 1.0, 0.0, 0.0 ] },
  { line = "vision" group = "red_buoy_results" color = [ 1.0, 0.0, 0.0 ] },
  { line = "vision" group = "green_buoy_results" color = [ 0.0, 1.0, 0.0 ] },
  { line = "vision" group = "yellow_buoy_results" color = [ 1.0, 1.0, 0.0 ] },

  // Navigation
  { line = "vision" group = "wire_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "bottom_x1" center_y = "bottom_y1"
    probability = "bottom_prob" },
  { line = "vision" group = "wire_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "bottom_x2" center_y = "bottom_y2"
    probability = "bottom_prob" },
  { line = "vision" group = "wire_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "left_x1" center_y = "left_y1"
    probability = "left_prob" },
  { line = "vision" group = "wire_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "left_x2" center_y = "left_y2"
    probability = "left_prob" },
  { line = "vision" group = "wire_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "right_x1" center_y = "right_y1"
    probability = "right_prob" },
  { line = "vision" group = "wire_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "right_x2" center_y = "right_y2"
    probability = "right_prob" },


  // Roulette
  {
    model = "Roulette.obj"
    position = [ 5.0, -6.0, 3.5]
    orientation_hpr = [ 235, 180, 90 ]
    render_tag = "roulette"
  },

  { line = "vision" group = "bin_cover" color = [ 1.0, 0.6, 0.0 ] },
  { line = "vision" group = "bin_yellow_1" color = [ 1.0, 1.0, 0.0 ] },
  { line = "vision" group = "bin_yellow_2" color = [ 1.0, 1.0, 0.0 ] },

  // Torpedoes TODO Figure out how to add cutouts.
  { line = "vision" group = "torpedoes_results" color = [ 1.0, 1.0, 0.0 ]
    center_x = "board_center_x" center_y = "board_center_y"
    probability = "board_prob" },

  // Recovery
  {
    model = "Cash_In.obj"
    // position = "visualizer_placer"
    // orientation_hpr = "visualizer_placer"
    position = [ 18, -8, 0]
    orientation_hpr = [ 0, 180, 0 ]
    render_tag = "cash_in"
  },
  {
    model = "Bins.obj"
    // position = "visualizer_placer"
    // orientation_hpr = "visualizer_placer"
    position = [ 18.0, -6.5, 4.0 ]
    orientation_hpr = [ 0, 0, -90 ]
    render_tag = "cash_in"
  },
  {
    line = "vision"
    group = "recovery_vision_downward"
    color = [ 1.0, 1.0, 1.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_forward"
    color = [ 1.0, 1.0, 1.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_downward_red"
    color = [ 1.0, 0.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_forward_red"
    color = [ 1.0, 0.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_forward_green"
    color = [ 0.0, 1.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_downward_gold"
    color = [ 1.0, 1.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_forward_gold_1"
    color = [ 1.0, 1.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_forward_gold_2"
    color = [ 1.0, 1.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_downward_bin_red"
    color = [ 1.0, 0.0, 0.0 ]
  },
  {
    line = "vision"
    group = "recovery_vision_downward_bin_green"
    color = [ 0.0, 1.0, 0.0 ]
  },

  {
    model = "dice_1.obj"
    position = [5, -5, 0] //"visualizer_placer"
    orientation_hpr = [0, 0, 0] //"visualizer_placer"
  },
  {
    model = "dice_2.obj"
    position = [5, -4, 0]
    orientation_hpr = [0, 0, 0]
  },
  {
    model = "dice_5.obj"
    position = [6, -5, 1]
    orientation_hpr = [0, 0, 0]
  },
  {
    model = "dice_6.obj"
    position = [6, -4, 1]
    orientation_hpr = [0, 0, 0]
  },

  {
    model = "thor.obj"
    position = "kalman"
    orientation_q = "kalman"
    cameras_from_vehicle = true
    sub = true
    exclude_renders = ( "offscreen" )
  },

  // Objects with transparency are last to avoid alpha blending issues.
  // https://www.opengl.org/wiki/Transparency_Sorting
  {
    model = "teagle.obj"
    position = [ 10, 10, -2 ]
    scale = [ 2, 2, 2]
    exclude_renders = ( "shadow" )
  },

  {
    model = "thor.obj"
    position = "kalman"
    orientation_hpr = "desires"
    alpha = 0.43
    exclude_renders = ( "offscreen", "shadow" )
  }
)
