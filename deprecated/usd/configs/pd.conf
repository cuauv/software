; AVR Register Map. Format: 
; ; denotes a comment, # denotes a section header, $ is the number of total registers, @ is the Device information
; Types are: bool==uint8 (one reg),  uint16 (one reg), uint32 (two regs), int8 (one reg),  int16 (one reg), int32 (two regs), float (two regs)
; arrays of 2 reg values must be an even length

$80

@ pd,86,autodetect,57600

;group: sensor_power,Y,desc
;group: sensor_power_status,N,desc

; Required/Reserved stuff
# 0,0,N,default registers
1, uint16, deviceId, N, Y, Contains the device ID
1, uint16, protocolRev, N, Y, Contains the supported protocol revision number, 0xMMmm, for Major/minor numbers
2, uint32, buildDate, N, Y, 32-bit build date: 0xYYYYMMDD.
1, uint16, hb0, N, N, Write to trigger a HB action
1, uint16, hb1, N, Y, Read to verify HB action (hb0 is copied here on write).
1, uint16, restartState, N, N, Restart status: 0 = fresh, -1 = watchdog. Will be set to -1 when a reset chip command is received

; Custom registers
# 16, 100000, Y, Read / Write registers
;16
1, int16, sensor_power/desired_port_status, N, N, desired status of the 16 output ports - toggle to reset (this can be used to control lamps)

# 18, 100000, Y, Read only registers
;18
2, float, supply_5v/voltage, N, Y, voltage measured at output of 5V DCDC
;20
2, float, supply_5v/current, N, Y, current measured at output of 5V DCDC
;22
2, float, supply_12v/voltage, N, Y, voltage measured at output of 12V DCDC
;24
2, float, supply_12v/current, N, Y, current measured at output of 12V DCDC
;26
2, float, supply_24v/voltage, N, Y, voltage measured at output of 24V DCDC
;28
2, float, supply_24v/current, N, Y, current measured at output of 24V DCDC
;30
2, float, sensor_power_status/current_5v_1, N, Y, current measured at output of port 1 (5V1)
;32
2, float, sensor_power_status/current_5v_2, N, Y, current measured at output of port 2 (5V2)
;34
2, float, sensor_power_status/current_5v_3, N, Y, current measured at output of port 3 (5V3)
;36
2, float, sensor_power_status/current_5v_4, N, Y, current measured at output of port 4 (5V4)
;38
2, float, sensor_power_status/current_5v_5, N, Y, current measured at output of port 5 (5V5)
;40
2, float, sensor_power_status/current_5v_6, N, Y, current measured at output of port 6 (5V6)
;42
2, float, sensor_power_status/current_12v_1, N, Y, current measured at output of port 7 (12V1)
;44
2, float, sensor_power_status/current_5v_7, N, Y, current measured at output of port 8 (5V7)
;46
2, float, sensor_power_status/current_12v_2, N, Y, current measured at output of port 9 (12V2)
;48
2, float, sensor_power_status/current_12v_5, N, Y, current measured at output of port 10 (12V5)
;50
2, float, sensor_power_status/current_12v_3, N, Y, current measured at output of port 11 (12V3)
;52
2, float, sensor_power_status/current_12v_6, N, Y, current measured at output of port 12 (12V6)
;54
2, float, sensor_power_status/current_12v_4, N, Y, current measured at output of port 13 (12V4)
;56
2, float, sensor_power_status/current_12v_7, N, Y, current measured at output of port 14 (12V7)
;58
2, float, sensor_power_status/current_12v_8, N, Y, current measured at output of port 15 (12V8)
;60
2, float, sensor_power_status/current_24v, N, Y, current measured at output of port 16 (24V)
;62
2, float, sensor_power_status/temperature, N, Y, temperature measured by the board in degrees Centigrade

#64, 0, Y, Channel enables
;64
1, int16, sensor_power/enable_5v_1, N, N, 1st 5 volt channel Enable
;65
1, int16, sensor_power/enable_5v_2, N, N, 2nd 5 volt channel Enable
;66
1, int16, sensor_power/enable_5v_3, N, N, 3rd 5 volt channel Enable
;67
1, int16, sensor_power/enable_5v_4, N, N, 4th 5 volt channel Enable
;68
1, int16, sensor_power/enable_5v_5, N, N, 5th 5 volt channel Enable
;69
1, int16, sensor_power/enable_5v_6, N, N, 6th 5 volt channel Enable
;70
1, int16, sensor_power/enable_5v_7, N, N, 7th 5 volt channel Enable
;71
1, int16, sensor_power/enable_12v_1, N, N, 1st 12 volt channel Enable
;72
1, int16, sensor_power/enable_12v_2, N, N, 2nd 12 volt channel Enable
;73
1, int16, sensor_power/enable_12v_3, N, N, 3rd 12 volt channel Enable
;74
1, int16, sensor_power/enable_12v_4, N, N, 4th 12 volt channel Enable
;75
1, int16, sensor_power/enable_12v_5, N, N, 5th 12 volt channel Enable
;76
1, int16, sensor_power/enable_12v_6, N, N, 6th 12 volt channel Enable
;77
1, int16, sensor_power/enable_12v_7, N, N, 7th 12 volt channel Enable
;78
1, int16, sensor_power/enable_12v_8, N, N, 8th 12 volt channel Enable
;79
1, int16, sensor_power/enable_24v, N, N, 24 volt channel Enable

