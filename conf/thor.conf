{
    // The below are highly dependent on trim
    "center_of_buoyancy": [0.009, -0.008, -0.041],
    "buoyancy_force": 336,  // FUDGED to assume postively buoyant sub
    "gravity_force": 333.6,

    // only used for partially submerged buoyancy force calculation, non critical
    "sub_height": 0.50,

    // Moments of inertia (kg * m^2) from solidworks.
    // In the model frame.
    "I": [[ 0.7786, 0.0086, 0.1441],
          [ 0.0086, 3.5742,-0.0190],
          [ 0.1441,-0.0190, 3.7847]],
    // Ib and body_rot calculated using auv-body-frame-calc.
    "Ib": [0.771676, 3.57266, 3.79317],
    // A normalized quaternion representing rotation from the body to the model
    // frame.
    "btom_rq": [-0.02381, 0.00270344, 0.99882, 0.0422376],
    // x was tweaked to reflect the limited real backwards thrust of our thrusters.
    "cwhe_axes": [76.5549069159, 76.5549069159, 153.109813832, 38.277453458, 53.5884348412, 45.9329441496],
    "thruster_minimums": [-76.5549069159, -90.9802827426, -181.960565485, -38.277453458, -53.5884348412, -42.3266001929],
    "thruster_maximums": [76.5549069159, 62.1295310892, 124.259062178, 38.277453458, 53.5884348412, 49.5392881062],
    "thrusters": [
        { "name": "fore_port",     "type": "T200", "pos": [0.24, -0.23, -0.10], "heading_pitch": [0, -90], "min_neg_pwm": -1, "min_pos_pwm": 5
        }, 
        //     "vector": [ [0, -1, 0], 360, "vector_status.position_port", "vector_desires.port", 61, false ] },
        { "name": "port",          "type": "T200", "pos": [-0.25, -0.31, 0.01],"heading_pitch": [0, 0], "min_neg_pwm": -1, "min_pos_pwm": 2 },
        { "name": "aft_port",      "type": "T200", "pos": [-0.40, -0.23, 0.01], "heading_pitch": [0, -90], "min_neg_pwm": -2, "min_pos_pwm": 1 },
        { "name": "sway_aft",      "type": "T200", "pos": [-0.50, -0.01, -0.01],"heading_pitch": [90, 0], "min_neg_pwm": -5, "min_pos_pwm": 1 },
        { "name": "aft_starboard", "type": "T200", "pos": [-0.40, 0.23,  0.01], "heading_pitch": [0, -90], "min_neg_pwm": -1, "min_pos_pwm": 2 },
        { "name": "starboard",     "type": "T200", "pos": [-0.25, 0.31, 0.01], "heading_pitch": [0, 0], "min_neg_pwm": -2, "min_pos_pwm": 1 },
        { "name": "fore_starboard","type": "T200", "pos": [0.24,  0.23, -0.10], "heading_pitch": [0, -90], "min_neg_pwm": -5, "min_pos_pwm": 1
        },
        //    "vector": [ [0, -1, 0], 360, "vector_status.position_starboard", "vector_desires.starboard", 793, false ] },
        { "name": "sway_fore",     "type": "T200", "pos": [0.48, 0.01, -0.01],  "heading_pitch": [90, 0], "min_neg_pwm": -5, "min_pos_pwm": 1 }
    ],
    "control_settings": {
        "depth":    { "kP": 7.00, "kI": 0.30, "kD": 3.20, "rD": 0.5, "ramp_speed": 0.5 },
        "pitch":    { "kP": 0.50, "kI": 0.00, "kD": 0.10, "rD": 50.0 },
        "heading":  { "kP": 0.70, "kI": 0.00, "kD": 0.20, "rD": 20.0 },
        "velx":     { "kP": 5.00, "kI": 0.00, "kD": 0.50, "rD": 0.1547 },
        "vely":     { "kP": 5.00, "kI": 0.00, "kD": 0.50, "rD": 0.5 },
        "roll":     { "kP": 0.50, "kI": 0.00, "kD": 0.15, "rD": 50.0 },
        "quat":     { "kP": 30.0, "kI": 0.00, "kD": 4.00 }
    },
    "drag_planes": [
        // horizontal, produces drag when diving and pitching
        {
            "pos": [0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.00
        },
        {
            "pos": [-0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.00
        },
        // fore sway, produces drag when swaying and rolling
        {
            "pos": [0, 0, -0.10],
            "normal": [0, 1, 0],
            "cD": 2.0,
            "area": 0.2
        },
        // aft sway
        {
            "pos": [0, 0, 0.10],
            "normal": [0, 1, 0],
            "cD": 2.0,
            "area": 0.2
        },
        // vertical, produces drag when going forward and yawing
        {
            "pos": [0, -0.25, 0],
            "normal": [1, 0, 0],
            "cD": 2.0,
            "area": 0.10
        },
        {
            "pos": [0, 0.25, 0],
            "normal": [1, 0, 0],
            "cD": 2.0,
            "area": 0.10
        }
    ],
    // uncompensated drag, to simulate drag that is not accounted for by the controller
    // (or that the controller can't efectively account for)
    "uncompensated_drag_planes": [
        // horizontal, produces drag when diving and pitching
        {
            "pos": [0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.25
        },
        {
            "pos": [-0.25, 0, 0],
            "normal": [0, 0, 1],
            "cD": 2.0,
            "area": 0.25
        }
    ],
    "sensors": {
        "depth": "depth.depth",
        "depth_offset": "depth.offset",
        "heading_rate": "gx4.ratez",
        "pitch_rate": "gx4.ratey",
        "roll_rate": "gx4.ratex",
        "velx": "dvl.velocity_x",
        "vely": "dvl.velocity_y",
        "velz": "dvl.velocity_z",
        "quaternion": "gx4"
    },
    "components": {
      "port_forecam": [0.0, 0.0, 0.0],
      "starboard_forecam": [0.0, 0.0, 0.0],
      "downcam": [0.0, 0.0, 0.0],
      "sonar": [0.0, 0.0, 0.0]
    },
    "cameras": {

      "forward_right": {
        "type": "ueye",
        "id": 3,
        "camera_name": "ueye_forward", // for configuration
        "width": 1600,
        "height": 1200,
        "position": [0.48, 0.15, -0.08],
        "orientation_hpr":  [0, 0, 0],

        // The optical sensor size of the CAMERA, width and height in mm
        // This should typically be in the same ratio as the resolution, above.
        "sensor_size_wh_mm": [7.2, 5.4],
        // The focal length of the LENS in mm
        "focal_length_mm": 3.6
      },

      "downward": {
        "type": "ueye",
        "id": 1,
        "camera_name": "ueye_downward", // for configuration
        "width": 1024,
        "height": 768,
        "rotate180": "true",
        "position": [0.0, 0.0, 0.15],
        "orientation_hpr": [0, -90, 0],

        // The optical sensor size of the CAMERA, width and height in mm
        // This should typically be in the same ratio as the resolution, above.
        "sensor_size_wh_mm": [4.76, 3.57],
        "focal_length_mm": 3.5
      }
    },

    "vision_modules": [
      {"name": "buoys", "capture_sources": ["forward_right"]},
      {"name": "wire", "capture_sources": ["forward_right"]},
      {"name": "torpedoes", "capture_sources": ["forward_right"]},
      {"name": "pipes", "capture_sources": ["downward"]},
      {"name": "bins", "capture_sources": ["downward"]},
      {"name": "recovery", "capture_sources": ["downward"]},
      {"name": "record", "capture_sources": ["forward_right", "downward", "sonar"]}
    ],

    "actuators": {
      "torpedo_top": 4,
      "torpedo_bottom": 6,
      "torpedo_bottom_1" : 9,
      "torpedo_bottom_2": 11,
      "both_markers" : 12,
      "left_marker" : 7,
      "right_marker" : 5,
      "piston_extend": 2,
      "piston_retract": 3,
      "magnet": 13
    }
}
// vim: set filetype=javascript expandtab :
