; AVR Register Map. Format: 
; ; denotes a comment, # denotes a section header, $ is the number of total registers, @ is the Device information
; Types are: bool==int16 (one reg),  int16 (one reg), uint32 (two regs), int16 (one reg),  int16 (one reg), int32 (two regs), float (two regs)
; arrays of 2 reg values must be an even length

;$ is the number of total registers. It is required, but not used by the AVR defgen
$64

;@Device information: name, id, path to device, baud rate
@ actuators, 69, autodetect, 57600

;group: actuator_desires,Y,desc
;group: actuator_status,N,desc
;group: switches,N,desc

; Required/Reserved stuff
# 0,0,N, default registers
1, int16, deviceId, N, Y, Contains the device ID
1, int16, protocolRev, N, Y, Contains the supported protocol revision number, 0xMMmm, for Major/minor numbers
2, uint32, buildDate, N, Y, 32-bit build date: 0xYYYYMMDD.
1, int16, hb0, N, N, Write to trigger a HB action
1, int16, hb1, N, Y, Read to verify HB action (hb0 is copied here on write).
1, int16, restartState, N, N, Restart status: 0 = fresh, -1 = watchdog. Will be set to -1 when a reset chip command is received.

; Custom registers
# 16,0, Y, Write only registers
;16
1, int16, actuator_desires/trigger_01, N, N, Firing countdown ACT1
;17
1, int16, actuator_desires/trigger_02, N, N, Firing countdown ACT2
;18
1, int16, actuator_desires/trigger_03, N, N, Firing countdown ACT3
;19
1, int16, actuator_desires/trigger_04, N, N, Firing countdown ACT4
;20
1, int16, actuator_desires/trigger_05, N, N, Firing countdown ACT5
;21
1, int16, actuator_desires/trigger_06, N, N, Firing countdown ACT6
;22
1, int16, actuator_desires/trigger_07, N, N, Firing countdown ACT7
;23
1, int16, actuator_desires/trigger_08, N, N, Firing countdown ACT8
;24
1, int16, actuator_desires/trigger_09, N, N, Firing countdown ACT9
;25
1, int16, actuator_desires/trigger_10, N, N, Firing countdown ACT10
;26
1, int16, actuator_desires/trigger_11, N, N, Firing countdown ACT11
;27
1, int16, actuator_desires/trigger_12, N, N, Firing countdown ACT12
;28
1, int16, actuator_desires/trigger_13, N, N, Firing countdown ACT13
;29
1, int16, actuator_desires/trigger_14, N, N, Firing countdown ACT14
;30
1, int16, actuator_desires/motor_pwm_1, N, N, Motor 1 PWM
;31
1, int16, actuator_desires/motor_pwm_2, N, N, Motor 2 PWM
;32
1, int16, switches/soft_kill, N, N, soft kill

# 33, 100000, Y, Read from hard kill
;33
1, int16, actuator_status/blown_fuses, N, Y, 1 if any fuse is blown on the board
;34
2, float, actuator_status/motor_current_1, N, Y, Motor 1 Current
;35
2, float, actuator_status/motor_current_2, N, Y, Motor 2 Current
