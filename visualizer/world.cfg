skybox: "teagle"
fishbowl_data: true
objects: (
  {
    model = "buoy.obj"
    texture = "buoy_red_flipped.png"
    position = [ 2.5, -1.2, 0.5 ]
    render_tag = "red_buoy"
  },

  {
    model = "buoy.obj"
    texture = "buoy_green_flipped.png"
    position = [ 2.5, 1.2, 0.8 ]
    render_tag = "green_buoy"
  },

  {
    model = "scuttle_ship.obj"
    position = [ 2.5, 0.0, 0.75 ]
    orientation_hpr = [ 0, 0, -90 ]
    render_tag = "yellow_buoy"
  },

  {
	model = "table.obj"
	position = [ -5.7, -9., 4. ]
	scale = [ 0.01, 0.01, 0.01 ]
	render_tag = "doubloon_table"
  },

  {
	model = "plane.obj"
	position = [ -6.07, -8.64, 3.985 ]
	scale = [ 0.38, 0.38, 0.38 ]
	texture = "X_green.png"
	render_tag = "doubloon_table"
  },

  {
	model = "plane.obj"
	position = [ -5.31, -9.43, 3.985 ]
	scale = [ 0.38, 0.38, 0.38 ]
	texture = "X_red.png"
	render_tag = "doubloon_table"
  },

  {
    model = "Navigate_channel.obj"
    position = [ 0, -4, 2 ]
    orientation_hpr = [ 90, 0, 0 ]
    scale = [ 0.5, 0.5, 0.5 ]
    render_tag = "navigation"
  },

  {
    model = "path.obj"
    position = [ 0.0, -1.4, 2.6 ]
    orientation_hpr = [ -90, 0, 0 ]
    render_tag = "pipe_to_buoys"
  },

  {
    model = "path.obj"
    position = [ 0.0, -1.4, 2.6 ]
    orientation_hpr = [ 0, 0, -10 ]
    render_tag = "pipe_to_navigation"
  },

  {
    model = "weigh_anchor.obj"
    position = [ 3., -9., 3.12 ]
    orientation_hpr = [ 0, 0, -90 ]
  },

  {
    model = "tower_color.obj"
    position = [ -4., -9., 4.5 ]
  },

  //{
  //  model = "set_course.obj"
  //  position = [ 5, -9, 1 ]
  //  orientation_hpr = [ 180, 90, 0 ]
  //  scale = [1.2071, 1.2071, 1.2071]
  //  render_tag = "torpedo_board"
  //},

  {
    model = "plane.obj"
    position = [ 5, -9, 1 ]
    scale = [ 0.38, 0.38, 0.38 ]
    orientation_hpr = [ 180, 0, -90 ]
    texture = "torpedoes.png"
    render_tag = "torpedo_board"
  },

  // {
  //  model = "set_course_cover.obj"
  //  position = [4.5577, -8.95171, 0.7465]
  //  scale = [1.2071, 1.2071, 1.2071]
  //  orientation_hpr = [180, 90, 0]
  //},

  {
    points = "aslam" 
    addr = "127.0.0.1"
  },
  // Buoys
  { line = "shm" group = "red_buoy_obs_left" color = [ 1.0, 0.0, 0.0 ] },
  { line = "vision" group = "red_buoy_results" color = [ 1.0, 0.0, 0.0 ] },
  { line = "vision" group = "green_buoy_results" color = [ 0.0, 1.0, 0.0 ] },
  { line = "vision" group = "yellow_buoy_results" color = [ 1.0, 1.0, 0.0 ] },

  // Pipes
  { line = "vision" group = "pipe_results"
    color = [ 1.0, 0.6, 0.0 ] probability = "heuristic_score" },

  // Navigation
  { line = "vision" group = "navigate_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "bottom_x1" center_y = "bottom_y1"
    probability = "bottom_prob" },
  { line = "vision" group = "navigate_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "bottom_x2" center_y = "bottom_y2"
    probability = "bottom_prob" },
  { line = "vision" group = "navigate_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "left_x1" center_y = "left_y1"
    probability = "left_prob" },
  { line = "vision" group = "navigate_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "left_x2" center_y = "left_y2"
    probability = "left_prob" },
  { line = "vision" group = "navigate_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "right_x1" center_y = "right_y1"
    probability = "right_prob" },
  { line = "vision" group = "navigate_results"
    color = [ 0.7, 1.0, 0.0 ] center_x = "right_x2" center_y = "right_y2"
    probability = "right_prob" },


  // Bins
  { line = "vision" group = "bin_cover" color = [ 1.0, 0.6, 0.0 ] },
  { line = "vision" group = "bin_yellow_1" color = [ 1.0, 1.0, 0.0 ] },
  { line = "vision" group = "bin_yellow_2" color = [ 1.0, 1.0, 0.0 ] },

  // Torpedoes TODO Figure out how to add cutouts.
  { line = "vision" group = "torpedoes_results" color = [ 1.0, 1.0, 0.0 ]
    center_x = "board_center_x" center_y = "board_center_y"
    probability = "board_prob" },

  // Recovery
  { line = "vision" group = "recovery_vision"
    color = [ 1.0, 0.0, 0.3 ] center_x = "red_mark_x" center_y = "red_mark_y"
    probability = "red_mark_visible" },
  { line = "vision" group = "recovery_vision"
    color = [ 0.0, 1.0, 0.3 ]
    center_x = "green_mark_x" center_y = "green_mark_y"
    probability = "green_mark_visible" },
  { line = "vision" group = "recovery_vision"
    color = [ 1.0, 1.0, 1.0 ] center_x = "stack_1_x" center_y = "stack_1_y"
    probability = "stack_1_visible" },
  { line = "vision" group = "recovery_vision"
    color = [ 1.0, 1.0, 1.0 ] center_x = "stack_2_x" center_y = "stack_2_y"
    probability = "stack_2_visible" },
  { line = "vision" group = "recovery_vision"
    color = [ 1.0, 1.0, 1.0 ] center_x = "stack_3_x" center_y = "stack_3_y"
    probability = "stack_3_visible" },
  { line = "vision" group = "recovery_vision"
    color = [ 1.0, 1.0, 1.0 ] center_x = "stack_4_x" center_y = "stack_4_y"
    probability = "stack_4_visible" },

  {
    model = "thor.obj"
    position = "kalman"
    orientation_q = "kalman"
    cameras_from_vehicle = true
    sub = true
    exclude_renders = ( "offscreen" )
  },

  // Objects with transparency are last to avoid alpha blending issues.
  // https://www.opengl.org/wiki/Transparency_Sorting
  {
    model = "teagle.obj"
    position = [ 10, 10, -2 ]
    scale = [ 2, 2, 2]
    exclude_renders = ( "shadow" )
  },

  {
    model = "thor.obj"
    position = "kalman"
    orientation_hpr = "desires"
    alpha = 0.43
    exclude_renders = ( "offscreen", "shadow" )
  }
)
